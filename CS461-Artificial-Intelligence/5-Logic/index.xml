<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>5 - Logic on</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/</link><description>Recent content in 5 - Logic on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/index.xml" rel="self" type="application/rss+xml"/><item><title>Backward Chaining</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Backward-Chaining/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Backward-Chaining/</guid><description>Backward chaining is an inference method characterized by working backwards from a goal to find some series of antecedents that support that goal.</description></item><item><title>Forward Chaining</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Forward-Chaining/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Forward-Chaining/</guid><description>Forward chaining is an inference method characterized by its forward-moving development of new facts from inference rules until a particular goal is reached.</description></item><item><title>5 - Logic (Overview)</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Overview/</guid><description>Types [[CS461 - Artificial Intelligence/5 - Logic/Predicate Logic]] [[CS461 - Artificial Intelligence/5 - Logic/Propositional Logic]] Other Logics Everything we&amp;rsquo;ve seen so far is monotonic: once it&amp;rsquo;s in the knowledge base, it can&amp;rsquo;t be removed</description></item><item><title>Predicate Logic</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Predicate-Logic/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Predicate-Logic/</guid><description>Overview Predicate logic allows us to make statements about categories
Features Arity: Arity 0: $win()$ Arity 1: $Student(\text{Bill})$ Arity 2: $Parent(\text{John}, \text{Martha})$ Also allows us to use existential ($\exists$) and universal ($\forall$) quantifiers All aliens drive flying saucers $\forall{x}: \text{Alien}(x) \implies \text{DrivesSaucer}(x)$ How would we prove $\neg{(\forall{x}: \text{Alien}(x) \implies \text{DrivesSaucer}(x)})$?</description></item><item><title>Propositional Logic</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Propositional-Logic/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Propositional-Logic/</guid><description>An expression in propositional logic is in clausal form if there is no:
implication conjunction double negative</description></item></channel></rss>