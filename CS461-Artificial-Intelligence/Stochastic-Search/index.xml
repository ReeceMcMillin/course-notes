<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stochastic Search on</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/</link><description>Recent content in Stochastic Search on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/index.xml" rel="self" type="application/rss+xml"/><item><title>Genetic Algorithms</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Genetic-Algorithms/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Genetic-Algorithms/</guid><description>Steps Initial population Randomly generate some initial population.
Selection There are a number of ways to handle selection, but the idea is to pick the parents of the next generation according to some fitness function.</description></item><item><title>Normalization</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Normalization/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Normalization/</guid><description>Types of Normalization L1 $$\frac{x_i}{\sum{x_i}}$$
L2 $$\frac{x^2_i}{\sum{x^2_i}}$$
[!NOTE] Note In general, $L_k$ normalization involves $x^k$
Softmax $$\frac{e^{x_i}}{\sum{x_i}}$$</description></item><item><title>Simulated Annealing</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Simulated-Annealing/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Stochastic-Search/Simulated-Annealing/</guid><description/></item></channel></rss>