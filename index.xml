<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reece McMillin | Notes on</title><link>https://reecemcmillin.github.io/quartz/</link><description>Recent content in Reece McMillin | Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reecemcmillin.github.io/quartz/index.xml" rel="self" type="application/rss+xml"/><item><title>Bias in Machine Learning Slides</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Bias-in-Machine-Learning-Slides/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Bias-in-Machine-Learning-Slides/</guid><description/></item><item><title>Data is never raw, truthful, neutral</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Data-is-never-raw-truthful-neutral/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Data-is-never-raw-truthful-neutral/</guid><description/></item><item><title>Final Exam Review</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Final-Exam-Review/</link><pubDate>Tue, 13 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Final-Exam-Review/</guid><description>Chapter 10 General structure of categories: unsupervised learning supervised learning reinforcement learning training set vs. test set vs.</description></item><item><title>2022-12-09</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-09/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-09/</guid><description>Why are signals disabled during scheduler calls? When a signal comes in, something needs dealing with Problem: if we&amp;rsquo;re in the middle of a context switch&amp;hellip; some registers backed up but not all item ready to be inserted to queue but not actually in Disable signals just long enough to do what we need without interruption Cooperative multithreading Everybody&amp;rsquo;s being good and keeping track of how long they&amp;rsquo;ve had the scheduler Not a bad idea, but requires everyone to cooperate Stack layout page 416 Blocking busy waiting/spinlock someone&amp;rsquo;s waiting for some condition to change generally changed by another thread CAS Can&amp;rsquo;t get a total deadlock ==ever== - the only way to invalidate one thread&amp;rsquo;s operation is when some other thread is making progress 1 2 3 4 5 6 r1 := x r2 := f(x) r3 := CAS(x, r1, r2) if !</description></item><item><title>2022-12-09</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-12-09/</link><pubDate>Fri, 09 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-12-09/</guid><description>Questions Should we expect specific questions from readings/videos? vanishing gradient as we go through backpropagation, multiplying small numbers by small numbers quickly pushes towards zero fix: as we get towards earlier layers, increase the learning rate unstable gradient either it&amp;rsquo;s heading towards 0 or it&amp;rsquo;s increasing exponentially fix: reduce the learning rate one-hot vs.</description></item><item><title>2022-12-07</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-07/</link><pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-07/</guid><description>Functional Languages Implementation Issues Railway-oriented programming Either Returns.. well, either something or something else</description></item><item><title>2022-12-06</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-12-06/</link><pubDate>Tue, 06 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-12-06/</guid><description>For Final Exam Review the midterm can have laptop or cell phone Example Questions Dijkstra Dijkstra&amp;rsquo;s algorithm is greedy algorithm Is Dijkstra&amp;rsquo;s algorithm similar to Prim&amp;rsquo;s vs.</description></item><item><title>2022-12-05</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-05/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-05/</guid><description>Functional Languages Historical Origins 1920s: set theory is all the rage Whitehead and Russell&amp;rsquo;s Principia Mathematica Godel comes along and throws a wrench into it if it&amp;rsquo;s consistent, it&amp;rsquo;s not powerful enough to prove its own consistency Question: what is decidable?</description></item><item><title>2022-12-05</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-12-05/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-12-05/</guid><description>Unsupervised Machine Learning Cluster Analysis K-means cluster by minimizing average distance to cluster centroid view data collection with $N$ data items per case as coordinates in $N$-dimensional space place $K$ centroids randomly in this $N$-dimensional space.</description></item><item><title>Alan Turing</title><link>https://reecemcmillin.github.io/quartz/People/Alan-Turing/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/People/Alan-Turing/</guid><description/></item><item><title>Alonzo Church</title><link>https://reecemcmillin.github.io/quartz/People/Alonzo-Church/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/People/Alonzo-Church/</guid><description/></item><item><title>2022-12-02</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-02/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-12-02/</guid><description>Semaphores [[CS441 - Programming Languages/13 - Concurrency/Semaphores|Semaphores]] are basically counters with two operations, $P$ and $V$. A thread that calls $V$ automatically increments the counter.</description></item><item><title>Monitors</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/13-Concurrency/Monitors/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/13-Concurrency/Monitors/</guid><description/></item><item><title>Semaphores</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/13-Concurrency/Semaphores/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/13-Concurrency/Semaphores/</guid><description/></item><item><title>2022-12-01</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-12-01/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-12-01/</guid><description> [[CS404 - Algorithms/Algorithms/Dijkstra - Shortest Path]]</description></item><item><title>3Blue1Brown - But What IS a Neural Network?</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-But-What-IS-a-Neural-Network/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-But-What-IS-a-Neural-Network/</guid><description/></item><item><title>3Blue1Brown - But What is Backpropagation Actually Doing?</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-But-What-is-Backpropagation-Actually-Doing/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-But-What-is-Backpropagation-Actually-Doing/</guid><description/></item><item><title>3Blue1Brown - Gradient Descent</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-Gradient-Descent/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/3Blue1Brown-Gradient-Descent/</guid><description/></item><item><title>Abuses &amp; Misuses of AI</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Abuses-Misuses-of-AI/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Abuses-Misuses-of-AI/</guid><description/></item><item><title>AI is neither Artificial nor Intelligent</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/AI-is-neither-Artificial-nor-Intelligent/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/AI-is-neither-Artificial-nor-Intelligent/</guid><description/></item><item><title>CACM - Facial Recognition Bias</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/CACM-Facial-Recognition-Bias/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/CACM-Facial-Recognition-Bias/</guid><description/></item><item><title>Dijkstra's Shortest Path</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Dijkstra-Shortest-Path/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Dijkstra-Shortest-Path/</guid><description>Idea Use the [[CS404 - Algorithms/Ideas/Greedy]] method to generated a shortest path between any two vertices of a graph.
This is very similar to [[CS404 - Algorithms/Algorithms/MST - Prim|Prim&amp;rsquo;s Algorithm]] to find a minimum spanning tree.</description></item><item><title>Excavating AI - Politics of Images in Machine Learning</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Excavating-AI-Politics-of-Images-in-Machine-Learning/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Excavating-AI-Politics-of-Images-in-Machine-Learning/</guid><description/></item><item><title>How Convolutional Networks Work</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/How-Convolutional-Networks-Work/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/How-Convolutional-Networks-Work/</guid><description>YouTube Link
Convolutional networks are multilayer networks first layer catches edges second layer catches things with more structure, e.</description></item><item><title>How Recurrent &amp; LSTM Networks Work</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/How-Recurrent-LSTM-Networks-Work/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Videos/How-Recurrent-LSTM-Networks-Work/</guid><description>YouTube Link
Overview good for sequential data LSTM A Long Short-Term Memory (LSTM) network is similar to a recurrent neural network (RNN) but with a memory function.</description></item><item><title>MIT - Image Generation is Racist</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/MIT-Image-Generation-is-Racist/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/MIT-Image-Generation-is-Racist/</guid><description/></item><item><title>Neural Networks and Backgammon</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Neural-Networks-and-Backgammon/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Neural-Networks-and-Backgammon/</guid><description/></item><item><title>Unsupervised Machine Learning</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Unsupervised-Machine-Learning/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Unsupervised-Machine-Learning/</guid><description>Cluster Analysis K-Means K-Means++ Hierarchical Clustering C-Means K-Nearest Neighbor Classifiers Linear Classifiers (Regression) Support Vector Machines (SVMs) Extend the idea of linear separation into hyperplane separation Principal Component Analysis Used to reduce the dimensionality of the problem by grouping features together Not always easy to determine why two features might be grouped together (if there&amp;rsquo;s any good reason at all) Association Hebbian Learning &amp;ldquo;Neurons that ==fire== together ==wire== together&amp;rdquo; neurons with similar activation levels (high or low) have their connections strengthened Method of Moments Supervised vs.</description></item><item><title>Wired - How to Stop Robots from Becoming Racist</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Wired-How-to-Stop-Robots-from-Becoming-Racist/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Reading/Wired-How-to-Stop-Robots-from-Becoming-Racist/</guid><description/></item><item><title>2022-11-30</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-30/</link><pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-30/</guid><description>Test-and-set locks to reduce contention Several processors (x86, IA-64, SPARC, etc) provide compare_and_swap CAS(location, expected, new) Using instructions like atomic_add or compare_and_swap, you can build ==fair== spin locks.</description></item><item><title>2022-11-30</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-30/</link><pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-30/</guid><description>Examples of Bias in AI Microsoft set up a Twitter bot that quickly became a Nazi Required Reading Excavating AI: The Politics of Images in Machine Learning Training Sets Image Generation is Racist - MIT Tech Review Can the Biases in Facial Recognition Be Fixed; Also, Should They?</description></item><item><title>Final Exam Review</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Final-Exam-Review/</link><pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Final-Exam-Review/</guid><description>Chapter 10 What order must destructors be called in Some languages don&amp;rsquo;t let you extend an existing class. What&amp;rsquo;s a reason why you might want to?</description></item><item><title>2022-11-28</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-28/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-28/</guid><description>Logistics Wiki project leave 5 questions on at least 3 different languages answer all questions on your language Discussion: C Is Not a Low-Level Language A programming language is low-level when you have to pay attention to the irrelevant.</description></item><item><title>2022-11-28</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-28/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-28/</guid><description>Cross-entropy What should the learning rate be? No hard-and-fast rule, gonna take some trial and error. Higher learning rates generally converge faster, but with less accuracy.</description></item><item><title>Dynamic Programming</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Dynamic-Programming/</link><pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Dynamic-Programming/</guid><description>Characteristics Simple Subproblems: there should be a way to break the global problem into simple subproblems, each having a similar structure to the original.</description></item><item><title>2022-11-18</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-18/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-18/</guid><description>Early Reply Thread Implementation At one extreme, every thread could get its own process. At the other, we could multiplex all of a program&amp;rsquo;s threads on top of a single process.</description></item><item><title>2022-11-18</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-18/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-18/</guid><description>Introduction Temporal Difference Learning: the score at position $n$ ought to help predict the score at position $n+1$.
Any linear function can be represented by a single hidden layer (of some sufficient size).</description></item><item><title>2022-11-17</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-11-17/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-11-17/</guid><description>Maximum Flow A transport (&amp;hellip;)
The source has no incoming edges. The sink has no outgoing edges. The weight $C_{ij} \geq 0$ of the directed edge $(i, j)$ is called the capacity of the edge.</description></item><item><title>Final Exam</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Final-Exam/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Final-Exam/</guid><description>Misc From Quizzes Analyzing algorithms refers to the time and space required to execute algorithms. An algorithm is a step-by-step method of solving some problems.</description></item><item><title>Ford-Fulkerson</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Ford-Fulkerson/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Ford-Fulkerson/</guid><description/></item><item><title>Greedy</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Greedy/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Greedy/</guid><description/></item><item><title>Kruskal's MST Algorithm</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/MST-Kruskal/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/MST-Kruskal/</guid><description>Kruskal&amp;rsquo;s Algorithm is a [[CS404 - Algorithms/Ideas/Greedy]] algorithm to build a minimum spanning tree by adding edges one by one into a growing spanning tree.</description></item><item><title>Lecture 26</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-26/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-26/</guid><description>Logistics Homework #3 Chapter 11 - The Dynamic Planet</description></item><item><title>Prim's Minimum Spanning Tree Algorithm</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/MST-Prim/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/MST-Prim/</guid><description>Prim&amp;rsquo;s algorithm</description></item><item><title>2022-11-16</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-16/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-16/</guid><description>Concurrency Without threads, a program (such as a web browser) must either adopt a sequential approach or centralize the problem of delay-inducing events in a single dispatch loop.</description></item><item><title>2022-11-16</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-16/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-16/</guid><description>Started with a discussion on Greg Rutkowski&amp;rsquo;s unwanted influence in AI image generation.
Shoshana Zuboff - The Age of Surveillance Capitalism Three questions</description></item><item><title>Lecture 25</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-25/</link><pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-25/</guid><description>Which part of a hurricane consists of dry, descending air? Eye Spiral bands Eye wall There are no dry conditions in a hurricane The wind speed and surface pressure have a ?</description></item><item><title>2022-11-14</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-14/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-14/</guid><description> [!NOTE] NOTE
This lecture is in Goodnotes.</description></item><item><title>2022-11-14</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-14/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-14/</guid><description>Videos Deep Neural Networks are Easily Fooled Consider the following videos assigned:
Playlist But What Is a Neural Network?</description></item><item><title>Wiki Project Draft</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-Draft/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-Draft/</guid><description>Overview SQL (Structured Query Language) is a declarative programming language designed for interacting with databases.
History SQL was introduced in a 1974 paper by recent PhD graduates Donald Chamberlin and Raymond Boyce.</description></item><item><title>Dope Vector</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Dope-Vector/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Dope-Vector/</guid><description>Dope vectors are used by the compiler to hold information about the sizing and memory layout of data objects (especially [[CS441 - Programming Languages/8 - Composite Types/Arrays|arrays]], or composite types which contain arrays).</description></item><item><title>Fronts</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Fronts/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Fronts/</guid><description/></item><item><title>Lecture 24</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-24/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-24/</guid><description>In-Class Quiz A cold air mass originating over an ocean is designated: cP mP mT cT Summer afternoon thundershowers in the southeastern United States are more than likely a result of #study convection lifting orographic lifting frontal lifting subtropical high pressure disturbance Orographic lifting is air rising due to convergence at the surface air rising due to heating of the surface air forced to rise along a front between air masses air forced to rise over a barrier, such as a mountain range.</description></item><item><title>Midlatitude Cyclones</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Midlatitude-Cyclones/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Midlatitude-Cyclones/</guid><description/></item><item><title>Tornados</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Tornados/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Tornados/</guid><description>A tornado is a violently rotating column of air extending downwards from a cumulonimbus - deep convection - cloud.
Tornados can range from a few meters to over 4 kilometers in diameter and can last anywhere from a few seconds to tens of minutes.</description></item><item><title>Tropical Cyclones</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Tropical-Cyclones/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Tropical-Cyclones/</guid><description>Tropical Cyclones are rotating storm systems which originate over warm, tropical waters.
Energy Source Tropical cyclones are powered by the latent heat of condensation.</description></item><item><title>2022-11-09</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-09/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-09/</guid><description>Review for Midterm 2 [[CS441 - Programming Languages/Midterm 2 Review|Main midterm review page here]]
Garbage Collection Lock and Key Each heap object gets a numeric key that is stored with the object Each pointer becomes a (key, address) pair.</description></item><item><title>2022-11-09</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-09/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-09/</guid><description>Recap We were talking about decision trees and the issue of what decision to make next
$$H(p) = \Sigma{(-p\lg{p})}$$ Example:</description></item><item><title>ID3 Algorithm</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/10-Decision-Trees/ID3-Algorithm/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/10-Decision-Trees/ID3-Algorithm/</guid><description>Introduced in [[CS461 - Artificial Intelligence/Lectures/2022-11-09]]&amp;rsquo;s lecture.
Find the variable that comes closest to dividing the data into two equal subsets.</description></item><item><title>Neural Networks</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/11-Neural-Networks/Neural-Networks/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/11-Neural-Networks/Neural-Networks/</guid><description>Introduced in [[CS461 - Artificial Intelligence/Lectures/2022-11-09]]&amp;rsquo;s lecture</description></item><item><title>Lecture 23</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-23/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-23/</guid><description>Rain shadow: a dry area on the leeward side of a mountainous area (away from the wind) Leeward is the opposite of windward - the side of the mountain facing the wind.</description></item><item><title>Orographic Lifting</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Orographic-Lifting/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/7-Weather/Orographic-Lifting/</guid><description>Oro means &amp;ldquo;mountain&amp;rdquo; Orographic lifting occurs when air is forced to ascend upslope as it is pushed against a mountain.</description></item><item><title>2022-11-07</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-07/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-07/</guid><description>Continuing [[CS441 - Programming Languages/10 - Data Abstraction and Object Orientation/Object Orientation]]
Encapsulation &amp;amp; Inheritance [[CS441 - Programming Languages/Languages/Euclid]] and [[CS441 - Programming Languages/Languages/ML]] introduced module types whose implementation resembles a record.</description></item><item><title>C#</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/C-Sharp/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/C-Sharp/</guid><description/></item><item><title>Dope Vector</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Dope-Vector/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Dope-Vector/</guid><description/></item><item><title>Dynamic Dispatch</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Dynamic-Dispatch/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Dynamic-Dispatch/</guid><description/></item><item><title>Dynamic Method Binding</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Dynamic-Method-Binding/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Dynamic-Method-Binding/</guid><description/></item><item><title>Eiffel</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Eiffel/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Eiffel/</guid><description/></item><item><title>Euclid</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Euclid/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Euclid/</guid><description/></item><item><title>Metaclasses</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Metaclasses/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Metaclasses/</guid><description/></item><item><title>ML</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/ML/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/ML/</guid><description/></item><item><title>Python</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Python/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Python/</guid><description/></item><item><title>Ruby</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Ruby/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Ruby/</guid><description/></item><item><title>Virtual Method Table</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Virtual-Method-Table/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Virtual-Method-Table/</guid><description/></item><item><title>Backward Chaining</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Backward-Chaining/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Backward-Chaining/</guid><description>Backward chaining is an inference method characterized by working backwards from a goal to find some series of antecedents that support that goal.</description></item><item><title>Conceptual Graph</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Conceptual-Graph/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Conceptual-Graph/</guid><description>Conceptual Graphs are a formalism for knowledge representation introduced by John F. Sowa1.
The original paper introducing conceptual graphs can be found at the author&amp;rsquo;s website here.</description></item><item><title>DENDRAL</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/DENDRAL/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/DENDRAL/</guid><description>DENDRAL is considered the first [[CS461 - Artificial Intelligence/9 - Expert Systems/Expert Systems|expert system]]. It was written in [[LISP]] with the goal of helping organic chemists identify unknown molecules.</description></item><item><title>Forward Chaining</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Forward-Chaining/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Forward-Chaining/</guid><description>Forward chaining is an inference method characterized by its forward-moving development of new facts from inference rules until a particular goal is reached.</description></item><item><title>LISP</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/LISP/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/LISP/</guid><description/></item><item><title>MYCIN</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/MYCIN/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/MYCIN/</guid><description>MYCIN was an [[CS461 - Artificial Intelligence/9 - Expert Systems/Expert Systems|expert system]] derived from [[CS461 - Artificial Intelligence/9 - Expert Systems/DENDRAL]] and written in [[CS441 - Programming Languages/Languages/LISP]].</description></item><item><title>Prolog</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Prolog/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Prolog/</guid><description/></item><item><title>PROSPECTOR</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/PROSPECTOR/</link><pubDate>Sun, 06 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/PROSPECTOR/</guid><description>PROSPECTOR was an early [[CS461 - Artificial Intelligence/9 - Expert Systems/Expert Systems|expert system]] designed for the U.S. Geological Survey to aid geologists in mineral exploration1.</description></item><item><title>Nominal Type System</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Nominal-Type-System/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Nominal-Type-System/</guid><description>A type system is considered nominal if [[CS441 - Programming Languages/7 - Type Systems/Type Compatibility]] and [[CS441 - Programming Languages/7 - Type Systems/Type Equivalence]] are both determined by explicit declarations (the name) of the type.</description></item><item><title>Structural Type System</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Structural-Type-System/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Structural-Type-System/</guid><description/></item><item><title>Type Compatibility</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Compatibility/</link><pubDate>Sat, 05 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Compatibility/</guid><description/></item><item><title>2022-11-04</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-04/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-04/</guid><description>Logistics Exam
Know each different method of garbage collection and how it works Know what conservative compiler means Chapter 9 (cont.</description></item><item><title>2022-11-04</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-04/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-04/</guid><description>Logistics Exam is Monday 2022-11-07
5-9 is all fair game, 8 is pretty hard Will have resolutions Forward/backward chaining Advantages/disadvantages of each How to use each when proving a statement from a KB Know why some pair will or won&amp;rsquo;t resolve $$\begin{align*} a &amp;amp;\vee b \vee c\ \neg{a} &amp;amp;\vee \neg{b} \vee c\ \hline &amp;amp;\text{doesn&amp;rsquo;t resolve} \end{align*}$$ Gotta know Bayes&amp;rsquo; Theorem (and how to convert English statements to probabilistic statements) $$\begin{align*} P(B \mid A) = \frac{P(A \mid B) P(B)}{P(A \mid B)P(B) + P(A \mid \neg{B})P(\neg{B})} \end{align*}$$ $P(tumor) = 1\cdot 10^{-5}$ $P(test \mid tumor) = 0.</description></item><item><title>Coroutines</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Coroutines/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Coroutines/</guid><description/></item><item><title>Object Orientation</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Object-Orientation/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/10-Data-Abstraction-and-Object-Orientation/Object-Orientation/</guid><description/></item><item><title>SIMULA</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/SIMULA/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/SIMULA/</guid><description/></item><item><title>Smalltalk</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Smalltalk/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Smalltalk/</guid><description>Overview First fully object-oriented language, used a &amp;ldquo;message-based&amp;rdquo; programming model.
Legacy Influence Smalltalk changed the entire world of
Issues Smalltalk wasn&amp;rsquo;t really as used as its influence would suggest.</description></item><item><title>2022-11-02</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-02/</link><pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-11-02/</guid><description>Recap Call by sharing12 - very similar to pass by reference
Differences are subtle Lecture Closures as Parameters Closure: a reference to a subroutine together with its referencing environment that can be passed as a parameter.</description></item><item><title>2022-11-01</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-11-01/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Lectures/2022-11-01/</guid><description>Heap Sort [[CS404 - Algorithms/Algorithms/Heap Sort|Main Page]]
Trees/Graphs A free tree is A rooted tree is a tree in which a particular vertex is designated as the root.</description></item><item><title>2022-11-02</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-02/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-11-02/</guid><description>Machine Learning Unsupervised Clustering is a common goal: tell us what category things fall into Supervised: we generally have at least some idea of what we&amp;rsquo;re looking for or a task we want to carry out Reinforcement: ask the system to make choices, at some point give feedback on how good that choice was Decision Trees !</description></item><item><title>4 - Energy Balance and Temperature (Overview)</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Overview/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Overview/</guid><description/></item><item><title>Array</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Array/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Array/</guid><description/></item><item><title>Binary Tree</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Binary-Tree/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Binary-Tree/</guid><description>Full (Proper): every node other than the leaves has exactly two children. Complete: Every level, except possibly the last, is completely filled.</description></item><item><title>Heap</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Heap/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Data-Structures/Heap/</guid><description>Overview A heap is an almost-complete tree that satisfies one of the following heap properties.
Max Heap For any given node $C$, if $P$ is a parent of $C$, then the key (the value) of $P$ is greater than or equal to the key of $C$.</description></item><item><title>Heap Sort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Heap-Sort/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Heap-Sort/</guid><description>Overview What is a heap?
Heap Sort is a comparison-based sorting technique based on the [[CS404 - Algorithms/Data Structures/Heap#Binary Heap|binary heap]] data structure.</description></item><item><title>Jet Streams</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Jet-Streams/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Jet-Streams/</guid><description/></item><item><title>Rossby Waves</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Rossby-Waves/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Rossby-Waves/</guid><description/></item><item><title>2022-10-31</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-31/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-31/</guid><description>Logistics [[CS441 - Programming Languages/Wiki Project/Wiki Project - SQL]] Page now editable, link at above page Exam will go through Chapter 8 Chapter 9 [[CS441 - Programming Languages/9 - Subroutines and Control Abstraction/_index|Main Link]]</description></item><item><title>2022-10-31</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-31/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-31/</guid><description>Expert Systems We&amp;rsquo;ve been talking about how to put together an [[CS461 - Artificial Intelligence/9 - Expert Systems/Expert Systems|Expert System]]</description></item><item><title>ALGOL</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/ALGOL/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/ALGOL/</guid><description>ALGOL-W</description></item><item><title>Clu</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Clu/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Clu/</guid><description/></item><item><title>Knowledge Engineering</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/Knowledge-Engineering/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/Knowledge-Engineering/</guid><description/></item><item><title>Modula-3</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Modula-3/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Modula-3/</guid><description/></item><item><title>Tail Recursion</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/6-Control-Flow/Tail-Recursion/</link><pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/6-Control-Flow/Tail-Recursion/</guid><description/></item><item><title>Albedo</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Albedo/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Albedo/</guid><description/></item><item><title>Chapter 4 Questions</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Chapter-4-Questions/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Chapter-4-Questions/</guid><description>Explain the Greenhouse Effect. What factors explain the lower atmosphere&amp;rsquo;s blue color? What process determines the red/orange colors of a sunset?</description></item><item><title>Chapter 5 Questions</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Chapter-5-Questions/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Chapter-5-Questions/</guid><description>What is the relationship between air pressure and density? What about air pressure and temperature? What is the difference between an isotherm and an isobar?</description></item><item><title>Chapter 6 Questions</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/6-Atmospheric-Moisture/Chapter-6-Questions/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/6-Atmospheric-Moisture/Chapter-6-Questions/</guid><description>Describe the molecular structure of water&amp;rsquo;s three physical states: ice, water, and water vapor. What are the six processes behind water&amp;rsquo;s three phase changes?</description></item><item><title>Energy Pathways</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Energy-Pathways/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Energy-Pathways/</guid><description>The four energy pathways are:
Reflection and [[ENV110 - Environmental Science/4 - Energy Balance and Temperature/Albedo]] Scattering [[ENV110 - Environmental Science/4 - Energy Balance and Temperature/Rayleigh Scattering]] Refraction Absorption Reflection and Albedo</description></item><item><title>Rayleigh Scattering</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Rayleigh-Scattering/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Rayleigh-Scattering/</guid><description>The Rayleigh Scattering Principle refers to shorter wavelengths of light experiencing more scattering.</description></item><item><title>The Greenhouse Effect</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/The-Greenhouse-Effect/</link><pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/The-Greenhouse-Effect/</guid><description/></item><item><title>2022-10-28</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-28/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-28/</guid><description>Logistics Overview of [[CS441 - Programming Languages/Wiki Project/Wiki Project - SQL]] Need to set an exam date soon Chapters 6 and 7 are fair game for quizzes Definitely some garbage collection material on exam 2 Lecture Garbage Collection Mark and Sweep Mark everything as garbage Walk the heap, anything we reach is not garbage (clear the mark) All garbage blocks get moved to the free list Problem: doesn&amp;rsquo;t address fragmentation Solution: Stop &amp;amp; Copy Stop and Copy similar to mark and sweep, but as we find reachable (live) memory, we copy it down to the region of the stack to build a non-fragmented region of live heap memory.</description></item><item><title>2022-10-28</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-28/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-28/</guid><description>Logistics Midterm 2 Monday November 7th Chapters 5 - 9 [[CS461 - Artificial Intelligence/Midterm 2 Review]] Lecture Chapter 9 - Expert Systems The first real use of AI</description></item><item><title>Expert Systems</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/Expert-Systems/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/9-Expert-Systems/Expert-Systems/</guid><description/></item><item><title>List</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/List/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/List/</guid><description>In garbage collected languages, list elements typically have to be the same type.
Two pointers:
data next node in list</description></item><item><title>Midterm 2 Review</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Midterm-2-Review/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Midterm-2-Review/</guid><description>[!NOTE] More Study Material
A lot of this is blank, but I&amp;rsquo;ve transcribed the textbook&amp;rsquo;s Check Your Understanding questions here.</description></item><item><title>Midterm 2 Review</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Midterm-2-Review/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Midterm-2-Review/</guid><description>Chapters Covered [[CS461 - Artificial Intelligence/5 - Logic]] Forward Chaining Backward Chaining [[CS461 - Artificial Intelligence/6 - Knowledge Representation]] [[CS461 - Artificial Intelligence/7 - Production Systems]] [[CS461 - Artificial Intelligence/8 - Uncertainty]] Fuzzy Logic [[CS461 - Artificial Intelligence/9 - Expert Systems]] Questions 5 - Logic 6 - Knowledge Representation 7 - Production Systems 8 - Uncertainty 9 - Expert Systems</description></item><item><title>Wiki Project - SQL</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-SQL/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-SQL/</guid><description>Logistics Due date: Sunday 2022-11-20
Project Description Roster - Who&amp;rsquo;s Doing What Timeline Need to fill in at least two entries Example of a high-quality page with notes from Hare Actual page to edit Draft at [[CS441 - Programming Languages/Wiki Project/Wiki Project Draft]] Components Overview Type of language When/where the language was written Why the language was written Primary uses for the language Notable features History Big Idea: talk about why someone thought the language was needed, what went into it, and how it worked out.</description></item><item><title>Big O Notation</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Big-O-Notation/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Big-O-Notation/</guid><description/></item><item><title>Bubble Sort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Bubble-Sort/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Bubble-Sort/</guid><description>Bubble Sort (also known as sinking sort) works by repeatedly swapping adjacent elements until the full list is sorted.
Analysis Recurrence Relation: $T(n) = T(n - 1) + (n - 1)$</description></item><item><title>Counting Sort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Counting-Sort/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Counting-Sort/</guid><description>Overview Counting Sort is a sorting algorithm that uses keys of small positive integers.
Analysis Given the following:
$n$ is the total number of elements $k$ is the range of elements (largest element - smallest elements) Complexity:</description></item><item><title>CS404 Midterm Study</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Midterm-Study/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Midterm-Study/</guid><description>Must know recurrence relation and time complexity of the following: [[CS404 - Algorithms/Algorithms/Bubble Sort]] [[CS404 - Algorithms/Algorithms/Insertion Sort]] [[CS404 - Algorithms/Algorithms/Merge Sort]] [[CS404 - Algorithms/Algorithms/Quicksort]] [[CS404 - Algorithms/Algorithms/Counting Sort]] Be able to find the big O complexity of functions using the following methods.</description></item><item><title>Insertion Sort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Insertion-Sort/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Insertion-Sort/</guid><description>Explanation The general strategy is to maintain an unsorted and a sorted section of the input array. At each stage, select the last element from the unsorted portion and place it into the correct position in the sorted portion.</description></item><item><title>Lecture 20</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-20/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-20/</guid><description>Three States of Water &amp;amp; Energy Transfer Release Absorption Freezing Melting Condensing Evaporating Depositing Sublimiation [!</description></item><item><title>Midterm 2 Study Guide</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Midterm-2-Study-Guide/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Midterm-2-Study-Guide/</guid><description>Chapters [[ENV110 - Environmental Science/4 - Energy Balance and Temperature/Chapter 4 Questions]] [[ENV110 - Environmental Science/5 - Atmospheric and Oceanic Circulation/Chapter 5 Questions]] [[ENV110 - Environmental Science/6 - Atmospheric Moisture/Chapter 6 Questions]]</description></item><item><title>Proofs</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Math/Proofs/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Math/Proofs/</guid><description>Any polynomial in $n$ of degree $k$ is $\Theta(n^k)$. Proof (fill this in soon)
$(\lg{n})^k \in O(n^\epsilon)$ for $k, \epsilon &amp;gt; 0$ Proof (fill this in soon)</description></item><item><title>2022-10-26</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-26/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Lectures/2022-10-26/</guid><description>Recap Dangling References [[CS441 - Programming Languages/8 - Composite Types/Pointers and Recursive Types#Tombstones | Tombstones]] ( Wikipedia) [[CS441 - Programming Languages/8 - Composite Types/Pointers and Recursive Types]] Rather than pointing directly to a value, we use [[CS441 - Programming Languages/8 - Composite Types/Pointers and Recursive Types#Locks and Keys | Locks and Keys]] ( Wikipedia) Handy if we&amp;rsquo;re only ever allocating pointers on the heap, otherwise not so much [[CS441 - Programming Languages/8 - Composite Types/Garbage Collection]]</description></item><item><title>2022-10-26</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-26/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Lectures/2022-10-26/</guid><description>Independence $$ P(A \wedge B) = P(A) \cdot P(B) $$ $$ \begin{align*} P(A \mid B) &amp;amp;= P(A)\ P(B \mid A) &amp;amp;= P(B) \end{align*} $$</description></item><item><title>Garbage Collection</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Garbage-Collection/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Garbage-Collection/</guid><description>Reference Counting Idea: keep a count of references pointing to objects in memory, deallocate the memory once that count reaches 0.</description></item><item><title>Quiz 2</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Quiz-Problems/Quiz-2/</link><pubDate>Wed, 26 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Quiz-Problems/Quiz-2/</guid><description>What is the complexity of linear search? The recurrence relation of linear search is $T(n) = T(n - 1) + 1$.</description></item><item><title>5 - Atmospheric and Oceanic Circulation (Overview)</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Overview/</guid><description> Trade Winds (easterly) Converge toward equatorial low pressure from regions of subtropical high pressure Warm, moist, rising air Westerlies Generated in subtropics Clockwise rotation Cool, dry, descending air Predominant surface wind pattern for the mid-latitudes (us) Polar Easterlies Generated at the poles; predominant surface wind pattern Polar easterlies, air mass conflict with Westerlies, source of winter storms</description></item><item><title>5 - Logic (Overview)</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Overview/</guid><description>Types [[CS461 - Artificial Intelligence/5 - Logic/Predicate Logic]] [[CS461 - Artificial Intelligence/5 - Logic/Propositional Logic]] Other Logics Everything we&amp;rsquo;ve seen so far is monotonic: once it&amp;rsquo;s in the knowledge base, it can&amp;rsquo;t be removed</description></item><item><title>AC-3</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/3-Informed-Search/Constraint-Satisfaction/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/3-Informed-Search/Constraint-Satisfaction/</guid><description/></item><item><title>Agents</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Agents/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Agents/</guid><description>Independent programs/systems that each specialize in small tasks Focus: what can be done?
Goals How does an agent perceive its environment?</description></item><item><title>Akra-Bazzi Theorem</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Akra-Bazzi-Theorem/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Akra-Bazzi-Theorem/</guid><description>Overview The Akra-Bazzi Theorem is a generalized version of the [[CS404 - Algorithms/Divide and Conquer/Master Theorem]] for solving recurrence relations.</description></item><item><title>Arrays</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Arrays/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Arrays/</guid><description>Overview Arrays are the most common composite type, go back to Fortran I. Idea: map a discrete index type to a component or element type.</description></item><item><title>Bayes' Theorem</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Bayes-Theorem/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Bayes-Theorem/</guid><description>$$\begin{align*} P(A \mid B) &amp;amp;= \frac{P(A \cap B)}{P(B)}, \text{ if } P(B) \neq 0\ &amp;amp;= \frac{P(B \mid A)\cdot P(A)}{P(B)}, \text{ if } P(B) \neq 0 \end{align*}$$ This is super cool if variables are discrete, but what about continuous variables?</description></item><item><title>Cobol</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Cobol/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Cobol/</guid><description/></item><item><title>Composite Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Composite-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Composite-Types/</guid><description>[!attention]
This is covered in significantly more detail in [[CS441 - Programming Languages/8 - Composite Types/]]
Records Records were introduced by [[CS441 - Programming Languages/Languages/Cobol]], similar to tuple</description></item><item><title>Concept Maps</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Concept-Maps/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Concept-Maps/</guid><description>Extension of [[CS461 - Artificial Intelligence/6 - Knowledge Representation/Semantic Networks]]
Key idea: show relationships between entities, tracing backwards/forwards to show how you arrived at a certain concept</description></item><item><title>CS404 - Algorithms</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Overview/</guid><description>This is a standard course on the basics of algorithm design and analysis.</description></item><item><title>CS441 - Programming Languages</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Overview/</guid><description/></item><item><title>Definitions</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Definitions/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Definitions/</guid><description>1 - Introduction scanner lexer parser lexical analysis semantic analysis parse tree syntax tree static semantics dynamic semantics 2 - Syntax regular expression Kleene closure terminal nonterminal BNF metasymbol production sentential form syntax analysis token keyword reserved word LL(n) LR(n) predictive parser bottom-up parser shift-reduce parser recursive descent parser epsilon production 3 - Names, Scopes, and Binding binding time referencing environment compile-time constant elaboration-time constant prologue/epilogue stack frame frame pointer displacement addressing heap fragmentation free list buddy system Fibonacci heap scope forward reference inheritance aliases 4 - Semantic Analysis unsafe optimization speculative optimization conservative compiler optimistic compiler attribute grammar test semantic function S-attributed grammar L-attributed grammar well-defined attribute grammar</description></item><item><title>Divide and Conquer</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Divide-and-Conquer/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Divide-and-Conquer/</guid><description>Divide and Conquer is an algorithm design paradigm that specializes in solving problems that can be solved recursively.</description></item><item><title>Enumeration Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Enumeration-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Enumeration-Types/</guid><description>Introduced in [[CS441 - Programming Languages/Languages/Pascal]]</description></item><item><title>ENV110 - Understanding the Earth</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Overview/</guid><description/></item><item><title>Frames</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Frames/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Frames/</guid><description>Extension of [[CS461 - Artificial Intelligence/6 - Knowledge Representation/Object Orientation]]
Frames are an artificial intelligence data structure used to divide knowledge into substructures by representing &amp;ldquo;stereotyped situations&amp;rdquo;.</description></item><item><title>Fuzzy Logic</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Fuzzy-Logic/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Fuzzy-Logic/</guid><description>Fuzzy Sets Crisp set: $\{0, 1\}$ Fuzzy set: $\{0, \dots, 1\}$
With a crisp set, we choose a strict cutoff value and make no accomodations.</description></item><item><title>Genetic Algorithms</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Genetic-Algorithms/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Genetic-Algorithms/</guid><description>Steps Initial population Randomly generate some initial population.
Selection There are a number of ways to handle selection, but the idea is to pick the parents of the next generation according to some fitness function.</description></item><item><title>Global Atmosphere Circulation</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Global-Atmosphere-Circulation/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Global-Atmosphere-Circulation/</guid><description>Wind Primary Circulation: general global circulation Secondary Circulation: related to migratory high-/low-pressure systems Tertiary Circulation: local winds, temporal weather patterns</description></item><item><title>Lecture 19</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-19/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/Lectures/Lecture-19/</guid><description>What causes the wind to flow from east to west instead of pole to equator Rotation of the earth Are Polar Cells thermally direct or thermally indirect?</description></item><item><title>Master Theorem</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Master-Theorem/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Master-Theorem/</guid><description>Note: the [[CS404 - Algorithms/Divide and Conquer/Akra-Bazzi Theorem]] generalizes this strategy.</description></item><item><title>Merge Sort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Merge-Sort/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Merge-Sort/</guid><description>Merge Sort uses the [[CS404 - Algorithms/Ideas/Divide and Conquer|divide and conquer]] paradigm to sort arrays.
At each step, the original array is divided into two halves.</description></item><item><title>Monsoons</title><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Monsoons/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/5-Atmospheric-and-Oceanic-Circulation/Monsoons/</guid><description>Monsoon: seasonal shifting winds that determines precipitation, due to heat capacity difference between land and sea
Remember: water has a higher heat capacity, less dramatic changes Summer warm humind winds blowing from ocean convective lifting over mountain barrier causes precipitation Continental low pressure, oceanic high pressure Winter Dry cool winds blowing seaward from continent Strong center of high pressure over continents Continental high pressure, oceanic low pressure</description></item><item><title>Monte Carlo Tree Search</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Monte-Carlo-Tree-Search/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Monte-Carlo-Tree-Search/</guid><description>Steps Selection Expansion Simulation Back-Propagation</description></item><item><title>Normalization</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Normalization/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Normalization/</guid><description>Types of Normalization L1 $$\frac{x_i}{\sum{x_i}}$$
L2 $$\frac{x^2_i}{\sum{x^2_i}}$$
[!NOTE] Note In general, $L_k$ normalization involves $x^k$
Softmax $$\frac{e^{x_i}}{\sum{x_i}}$$</description></item><item><title>Object Orientation</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Object-Orientation/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Object-Orientation/</guid><description>Key Ideas Inheritance Encapsulation Polymorphism Separate interface/implementation Languages Simula 67 Smalltalk</description></item><item><title>Pascal</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Pascal/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/Pascal/</guid><description/></item><item><title>PL-I</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/PL-I/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/PL-I/</guid><description/></item><item><title>Pointers and Recursive Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Pointers-and-Recursive-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Pointers-and-Recursive-Types/</guid><description>Records of some type $T$ can easily contain a reference to another record of $T$.
Reference model? No big deal, variables are already references Value model?</description></item><item><title>Predicate Logic</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Predicate-Logic/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Predicate-Logic/</guid><description>Overview Predicate logic allows us to make statements about categories
Features Arity: Arity 0: $win()$ Arity 1: $Student(\text{Bill})$ Arity 2: $Parent(\text{John}, \text{Martha})$ Also allows us to use existential ($\exists$) and universal ($\forall$) quantifiers All aliens drive flying saucers $\forall{x}: \text{Alien}(x) \implies \text{DrivesSaucer}(x)$ How would we prove $\neg{(\forall{x}: \text{Alien}(x) \implies \text{DrivesSaucer}(x)})$?</description></item><item><title>Probability</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Probability/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Probability/</guid><description>Where does uncertainty come from?
Partial observability Nondeterminism Both? eventually the last proton will decay
brian hare We could track some sort of belief state - out of every possible state, which one might we be in?</description></item><item><title>Propositional Logic</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Propositional-Logic/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/5-Logic/Propositional-Logic/</guid><description>An expression in propositional logic is in clausal form if there is no:
implication conjunction double negative</description></item><item><title>Quicksort</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Quicksort/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Algorithms/Quicksort/</guid><description>Overview Best Case: $O(n \lg{n})$ Average Case: $O(n \lg n)$ Worst Case: $O(n^2)$ Quicksort divides an array into subarrays by selecting a pivot element using [[CS404 - Algorithms/Ideas/Divide and Conquer]].</description></item><item><title>Recursion Tree Method</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Recursion-Tree-Method/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Recursion-Tree-Method/</guid><description/></item><item><title>Scripts</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Scripts/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Scripts/</guid><description>Idea Extension of [[CS461 - Artificial Intelligence/6 - Knowledge Representation/Frames]]
adds information about sequences of events and planning Key concept: conceptual dependency</description></item><item><title>Semantic Networks</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Semantic-Networks/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/6-Knowledge-Representation/Semantic-Networks/</guid><description>Semantics: meaning
Key idea: Model relationships between concepts, ideas, objects, events, or situations.</description></item><item><title>Sets</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Sets/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Sets/</guid><description>A set is an unordered collection of distinct values, usually of the same type.</description></item><item><title>Simulated Annealing</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Simulated-Annealing/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/4-Adversarial-Search/Simulated-Annealing/</guid><description/></item><item><title>Stable (Sorting)</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Stable-Sorting/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Ideas/Stable-Sorting/</guid><description>A stable sort preserves the existing relative order between equal items.</description></item><item><title>Strings</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Strings/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/8-Composite-Types/Strings/</guid><description> Some languages just view strings as arrays of characters Others provide features like substring extraction &amp;amp; pattern matching with regular expressions</description></item><item><title>Subrange Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Subrange-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Subrange-Types/</guid><description>Introduced in [[CS441 - Programming Languages/Languages/Pascal]] A subrange is a contiguous subset of the values of some discete base type (the parent)</description></item><item><title>Substitution Method</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Substitution-Method/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Divide-and-Conquer/Substitution-Method/</guid><description/></item><item><title>Translation Schemes</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/4-Semantic-Analysis/Translation-Schemes/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/4-Semantic-Analysis/Translation-Schemes/</guid><description>General Categories Oblivious: exploits no special knowledge of the parse tree or attribute grammar. Dynamic: tails attribute evaluation order to the structure of a given parse tree.</description></item><item><title>Type Conversions &amp; Casts</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Conversions-Casts/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Conversions-Casts/</guid><description>3 situations
Types have the same internal structure Types have different ranges of values, but there&amp;rsquo;s some overlap Internal representation is different, blue values overlap in some way.</description></item><item><title>Type Equivalence</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Equivalence/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Equivalence/</guid><description>How do we determine if two things are the same type?
Structural Equivalence: two types have the same components put together the same way.</description></item><item><title>Uncertainty</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Uncertainty/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/8-Uncertainty/Uncertainty/</guid><description>https://www.tylervigen.com/spurious-correlations
How do we figure out whether something is a causal connection or just coincidence?</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Exceptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/9-Subroutines-and-Control-Abstraction/Exceptions/</guid><description/></item><item><title/><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/C/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Languages/C/</guid><description/></item><item><title/><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/7-Production-Systems/Production-Systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/7-Production-Systems/Production-Systems/</guid><description>y&amp;mdash; title: &amp;ldquo;Production Systems&amp;rdquo; date: 2022-11-04 wikipedia: &amp;ldquo; https://en.wikipedia.org/wiki/Production_system_(computer_science)" Idea: if-then rules Production systems require:
control system (rules interpreter) database</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Heat-Transfer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Heat-Transfer/</guid><description>Radiation: transfer of heat in electromagnetic waves. Convection:</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Principle-Temperature-Controls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Principle-Temperature-Controls/</guid><description>Latitude Altitude Cloud Cover Land/Water Heating Differences</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Vocabulary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/4-Energy-Balance-and-Temperature/Vocabulary/</guid><description> Radiation Convection Conduction Advection Sensible Heat Latent Heat Reflection Albedo Scattering Rayleigh Scattering Principle Refraction Absorption Energy Surplus &amp;amp; Deficit Continentality Specific Heat Capacity of Land and Water Thermal Equator Temperature Range Annual Temperature Patterns Wind Chill Heat Index</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/6-Atmospheric-Moisture/Vocabulary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/ENV110-Environmental-Science/6-Atmospheric-Moisture/Vocabulary/</guid><description> Water vapor pressure Relative humidity (RH) RH vs. temperature Maximum specific humidity Saturation Dew-point temperature Cloud condensation nuclei (CCN) Condensation Cloud/fog formation Cloud seeding Precipitation processes in warm clouds in cold clouds</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-10-26-11.23.45.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-10-26-11.23.45.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements P ^xhd1Xqde
%%
Drawing{ &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://excalidraw.</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-11-02-13.19.08.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-11-02-13.19.08.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements Data ^p24ECq3H
Training ^sRei8MRa</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-11-03-13.02.01.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-11-03-13.02.01.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements 12 ^mGIXlYpO
20 ^a7KsNexp</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-01-13.10.09.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-01-13.10.09.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements A ^sY129JPg
A ^AKwPYPFn</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-06-12.19.44.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-06-12.19.44.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements %%
Drawing{ &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://excalidraw.</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-06-13.20.23.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-06-13.20.23.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements %%
Drawing 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 { &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://excalidraw.</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-09-11.12.20.excalidraw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/Drawing-2022-12-09-11.12.20.excalidraw/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements flag := true
xa := x ^P5byDVsp</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/Excalidraw/gaussian-regression-network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/Excalidraw/gaussian-regression-network/</guid><description>==⚠ Switch to EXCALIDRAW VIEW in the MORE OPTIONS menu of this document. ⚠==
Text Elements %%
Drawing{ &amp;#34;type&amp;#34;: &amp;#34;excalidraw&amp;#34;, &amp;#34;version&amp;#34;: 2, &amp;#34;source&amp;#34;: &amp;#34;https://excalidraw.</description></item><item><title>CS461 - Introduction to Artificial Intelligence</title><link>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS461-Artificial-Intelligence/Overview/</guid><description/></item><item><title>Quiz 1</title><link>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Quiz-Problems/Quiz-1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS404-Algorithms/Quiz-Problems/Quiz-1/</guid><description/></item></channel></rss>