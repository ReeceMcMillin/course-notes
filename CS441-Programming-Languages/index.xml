<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS441 - Programming Languages on</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/</link><description>Recent content in CS441 - Programming Languages on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/index.xml" rel="self" type="application/rss+xml"/><item><title>Wiki Project Draft</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-Draft/</link><pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-Draft/</guid><description>Overview SQL (Structured Query Language) is a declarative programming language designed for interacting with databases.
History SQL was introduced in a 1974 paper by recent PhD graduates Donald Chamberlin and Raymond Boyce.</description></item><item><title>Midterm 2 Review</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Midterm-2-Review/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Midterm-2-Review/</guid><description>[!NOTE] More Study Material
A lot of this is blank, but I&amp;rsquo;ve transcribed the textbook&amp;rsquo;s Check Your Understanding questions here.</description></item><item><title>Wiki Project - SQL</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-SQL/</link><pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Wiki-Project/Wiki-Project-SQL/</guid><description>Logistics Due date: Sunday 2022-11-20
Project Description Roster - Who&amp;rsquo;s Doing What Timeline Need to fill in at least two entries Example of a high-quality page with notes from Hare Actual page to edit Draft at [[CS441 - Programming Languages/Wiki Project/Wiki Project Draft]] Components Overview Type of language When/where the language was written Why the language was written Primary uses for the language Notable features History Big Idea: talk about why someone thought the language was needed, what went into it, and how it worked out.</description></item><item><title>CS441 - Programming Languages</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Overview/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Overview/</guid><description/></item><item><title>Definitions</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Definitions/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Definitions/</guid><description>1 - Introduction scanner lexer parser lexical analysis semantic analysis parse tree syntax tree static semantics dynamic semantics 2 - Syntax regular expression Kleene closure terminal nonterminal BNF metasymbol production sentential form syntax analysis token keyword reserved word LL(n) LR(n) predictive parser bottom-up parser shift-reduce parser recursive descent parser epsilon production 3 - Names, Scopes, and Binding binding time referencing environment compile-time constant elaboration-time constant prologue/epilogue stack frame frame pointer displacement addressing heap fragmentation free list buddy system Fibonacci heap scope forward reference inheritance aliases 4 - Semantic Analysis unsafe optimization speculative optimization conservative compiler optimistic compiler attribute grammar test semantic function S-attributed grammar L-attributed grammar well-defined attribute grammar</description></item><item><title/><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Final-Exam-Review/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/Final-Exam-Review/</guid><description>Chapter 10 What order must destructors be called in Some languages don&amp;rsquo;t let you extend an existing class. What&amp;rsquo;s a reason why you might want to?</description></item></channel></rss>