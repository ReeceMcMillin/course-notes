<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>7 - Type Systems on</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/</link><description>Recent content in 7 - Type Systems on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/index.xml" rel="self" type="application/rss+xml"/><item><title>7 - Type Systems (Overview)</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Overview/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Overview/</guid><description/></item><item><title>Composite Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Composite-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Composite-Types/</guid><description>[!attention]
This is covered in significantly more detail in [[CS441 - Programming Languages/8 - Composite Types/]]
Records Records were introduced by [[CS441 - Programming Languages/Languages/Cobol]], similar to tuple</description></item><item><title>Enumeration Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Enumeration-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Enumeration-Types/</guid><description>Introduced in [[CS441 - Programming Languages/Languages/Pascal]]</description></item><item><title>Subrange Types</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Subrange-Types/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Subrange-Types/</guid><description>Introduced in [[CS441 - Programming Languages/Languages/Pascal]] A subrange is a contiguous subset of the values of some discete base type (the parent)</description></item><item><title>Type Conversions &amp; Casts</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Conversions-Casts/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Conversions-Casts/</guid><description>3 situations
Types have the same internal structure Types have different ranges of values, but there&amp;rsquo;s some overlap Internal representation is different, blue values overlap in some way.</description></item><item><title>Type Equivalence</title><link>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Equivalence/</link><pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate><guid>https://reecemcmillin.github.io/quartz/CS441-Programming-Languages/7-Type-Systems/Type-Equivalence/</guid><description>How do we determine if two things are the same type?
Structural Equivalence: two types have the same components put together the same way.</description></item></channel></rss>